{"version":3,"file":"static/js/490.f62ea2e8.chunk.js","mappings":"4TAEMA,EAAU,mCACVC,EAAU,gCAEHC,EAAa,SAACC,GAA0B,IAApBC,EAAmB,uDAAP,GACnCC,EAASC,OAAOC,OAAO,CAAEC,QAASR,GAAWI,GACnD,IACI,IAAMK,EAAWC,IAAAA,IAAUT,EAAUE,EAAM,CAACE,OAAAA,IAC5C,OAAOI,EACT,MAAOE,GACLC,QAAQC,IAAIF,KCVdG,EAAW,8CACXC,EAAU,mCAGFC,EAAa,mCAAG,oGACHd,EAAW,uBADR,cACpBO,EADoB,QAEjBQ,KAAKC,QAAQC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,YAAoC,OAAtBD,EAAMC,YACxDN,EAAUK,EAAMC,YAAeP,KAHV,kBAInBL,EAASQ,KAAKC,SAJK,2CAAH,qDAQdI,EAAe,mCAAG,WAAOC,GAAP,0EACb,KAAVA,EADuB,0CAGIrB,EAAW,eAAgB,CAAEqB,MAAOA,IAHxC,cAGbd,EAHa,QAIVQ,KAAKC,QAAQC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,YAAoC,OAAtBD,EAAMC,YACxDN,EAAUK,EAAMC,YAAeP,KALjB,kBAMZL,EAASQ,MANG,yFAUhB,CAACC,QAAS,GAAIM,eAAgB,IAVd,yDAAH,sDAefC,EAAY,mCAAG,WAAOC,GAAP,uFAEDxB,EAAW,SAAD,OAAUwB,IAFnB,cAElBjB,EAFkB,QAGfQ,KAAKI,YAA4C,OAA9BZ,EAASQ,KAAKI,YACrCN,EAAUN,EAASQ,KAAKI,YAAeP,EAJpB,kBAKjBL,EAASQ,MALQ,2CAAH,sDASZU,EAAO,mCAAG,WAAOD,GAAP,uFAEIxB,EAAW,SAAD,OAAUwB,EAAV,aAFd,cAEbjB,EAFa,QAGVQ,KAAKW,KAAKT,KAAI,SAAAU,GAAK,OAAIA,EAAMC,aAAsC,OAAvBD,EAAMC,aACtDf,EAAUc,EAAMC,aAChB,2FALc,kBAMZrB,EAASQ,KAAKW,MANF,2CAAH,sDAUPG,EAAU,mCAAG,WAAOL,GAAP,uFACCxB,EAAW,SAAD,OAAUwB,EAAV,aADX,cAChBjB,EADgB,yBAEfA,EAASQ,KAAKC,SAFC,2CAAH,uD,gFClBvB,UAzBgB,WACZ,IAAQc,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACNN,EAAAA,EAAAA,IAAWC,GAASM,KAAKF,GAAYG,UACtC,CAACP,IAEmB,IAAnBG,EAAQK,QAEJ,0BACI,wBACKL,EAAQhB,KAAI,gBAAGO,EAAH,EAAGA,GAAIe,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACT,2BACI,qCAAaD,MACb,uBAAIC,MAFChB,WAQlB","sources":["api/api.js","api/getMoviesList.js","pages/Movies/MovieDetails/Reviews/Reviews.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst API_KEY = '686ce405e78c10a98219cd1fc59d1c0f';\nconst API_URL = 'https://api.themoviedb.org/3/';\n\nexport const apiRequest = (path, parameter = {}) => {\n    const params = Object.assign({ api_key: API_KEY }, parameter);\n    try {\n        const response = axios.get(API_URL + path, {params})\n        return response;\n    } catch (error) {\n        console.log(error);\n    }\n}","import { apiRequest } from \"./api\";\nconst noPoster = 'https://filmesiseriale.net/img/noposter.jpg';\nconst URL_API = 'https://image.tmdb.org/t/p/w500/';\n\n// getting list of trending\nexport const  getMoviesList = async () => {\n    const response = await apiRequest('trending/movie/week');\n    response.data.results.map(movie => movie.poster_path = movie.poster_path !== null ?\n        (URL_API + movie.poster_path) : noPoster)\n    return response.data.results;\n}\n\n// getting list of movies by search\nexport const getMoviesSearch = async (query) => {\n    if (query !== '') {\n        try {\n            const response = await apiRequest('search/movie', { query: query });\n            response.data.results.map(movie => movie.poster_path = movie.poster_path !== null ?\n                (URL_API + movie.poster_path) : noPoster)\n            return response.data;\n        } catch {\n        }\n    } else {\n        return {results: [], total_results: -1}\n    }\n}\n\n// get an info of one movie\nexport const getMovieInfo = async (id) => {\n    \n    const response = await apiRequest(`movie/${id}`);\n    response.data.poster_path = response.data.poster_path !== null ?\n        (URL_API + response.data.poster_path) : noPoster;\n    return response.data;\n}\n\n// get cast\nexport const getCast = async (id) => {\n\n    const response = await apiRequest(`movie/${id}/credits`);\n    response.data.cast.map(actor => actor.profile_path = actor.profile_path !== null ?\n        (URL_API + actor.profile_path) :\n        ('https://png.pngitem.com/pimgs/s/49-498069_talk-about-random-wiki-shy-guy-mario-hd.png'))\n    return response.data.cast;\n}\n\n// get reviews\nexport const getReviews = async (id) => {\n    const response = await apiRequest(`movie/${id}/reviews`);\n    return response.data.results;\n}","import { getReviews } from 'api/getMoviesList';\nimport { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\n\nconst Reviews = () => {\n    const { movieId } = useParams();\n    const [reviews, setReviews] = useState([]);\n\n    useEffect(() => {\n        getReviews(movieId).then(setReviews).catch()\n    }, [movieId])\n\n    if (reviews.length !== 0) {\n        return (\n            <div>\n                <ul>\n                    {reviews.map(({ id, author, content }) => (\n                        <li key={id}>\n                            <h4>Author: {author}</h4>\n                            <p>{content}</p>\n                        </li>))}\n                </ul>\n            </div>\n        )\n    } else {\n        return <p>We don't have any reviews for this movie</p>\n    }\n}\n\nexport default Reviews;"],"names":["API_KEY","API_URL","apiRequest","path","parameter","params","Object","assign","api_key","response","axios","error","console","log","noPoster","URL_API","getMoviesList","data","results","map","movie","poster_path","getMoviesSearch","query","total_results","getMovieInfo","id","getCast","cast","actor","profile_path","getReviews","movieId","useParams","useState","reviews","setReviews","useEffect","then","catch","length","author","content"],"sourceRoot":""}