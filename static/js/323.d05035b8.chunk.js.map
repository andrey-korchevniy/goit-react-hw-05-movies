{"version":3,"file":"static/js/323.d05035b8.chunk.js","mappings":"4TAEMA,EAAU,mCACVC,EAAU,gCAEHC,EAAa,SAACC,GAA0B,IAApBC,EAAmB,uDAAP,GACnCC,EAASC,OAAOC,OAAO,CAAEC,QAASR,GAAWI,GACnD,IACI,IAAMK,EAAWC,IAAAA,IAAUT,EAAUE,EAAM,CAACE,OAAAA,IAC5C,OAAOI,EACT,MAAOE,GACLC,QAAQC,IAAIF,KCRNG,EAAa,mCAAG,oGACHZ,EAAW,uBADR,cACpBO,EADoB,QAEjBM,KAAKC,QAAQC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,YAAoC,OAAtBD,EAAMC,YACxD,mCAAqCD,EAAMC,YAAe,iDAHrC,kBAInBV,EAASM,KAAKC,SAJK,2CAAH,qDAQdI,EAAe,mCAAG,WAAOC,GAAP,0EACb,KAAVA,EADuB,0CAGInB,EAAW,eAAgB,CAAEmB,MAAOA,IAHxC,cAGbZ,EAHa,QAIVM,KAAKC,QAAQC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,YAAoC,OAAtBD,EAAMC,YAChE,mCAAqCD,EAAMC,YAAe,iDALpC,kBAMZV,EAASM,MANG,yFAUhB,CAACC,QAAS,GAAIM,eAAgB,IAVd,yDAAH,sDAefC,EAAY,mCAAG,WAAOC,GAAP,uFAEDtB,EAAW,SAAD,OAAUsB,IAFnB,cAElBf,EAFkB,QAGfM,KAAKI,YAA4C,OAA9BV,EAASM,KAAKI,YAAwB,mCAAqCV,EAASM,KAAKI,YAAgB,8CAH7G,kBAIjBV,EAASM,MAJQ,2CAAH,sDAQZU,EAAO,mCAAG,WAAOD,GAAP,uFAEItB,EAAW,SAAD,OAAUsB,EAAV,aAFd,cAEbf,EAFa,QAGVM,KAAKW,KAAKT,KAAI,SAAAU,GAAK,OAAIA,EAAMC,aAAsC,OAAvBD,EAAMC,aACtD,kCAAoCD,EAAMC,aAAiB,2FAJ7C,kBAKZnB,EAASM,KAAKW,MALF,2CAAH,sDASPG,EAAU,mCAAG,WAAOL,GAAP,uFACCtB,EAAW,SAAD,OAAUsB,EAAV,aADX,cAChBf,EADgB,yBAEfA,EAASM,KAAKC,SAFC,2CAAH,uD,6ECxCVc,GAAWC,E,QAAAA,IAAOC,EAAAA,GAAPD,CAAH,o9B,SCDRE,EAAM,SAAC,GAAqB,IAAnB9B,EAAkB,EAAlBA,KAAM+B,EAAY,EAAZA,MACxB,OACI,SAACJ,EAAD,CAAUK,GAAIhC,EAAd,SACK+B,M,gJCHAE,EAAUL,EAAAA,GAAAA,IAAH,+DAIPM,EAAON,EAAAA,GAAAA,IAAH,2CAGJO,EAAMP,EAAAA,GAAAA,IAAH,2C,SCPHQ,EAAY,SAAC,GAAc,IAAZxB,EAAW,EAAXA,KAChBI,EAAqEJ,EAArEI,YAAae,EAAwDnB,EAAxDmB,MAAOM,EAAiDzB,EAAjDyB,aAAcC,EAAmC1B,EAAnC0B,aAAcC,EAAqB3B,EAArB2B,SAAUC,EAAW5B,EAAX4B,OAElE,OACI,UAACP,EAAD,YACI,SAACE,EAAD,CAAKM,IAAKzB,EAAa0B,IAAI,kBAC3B,UAACR,EAAD,YACI,0BAAKH,EAAL,KAAcM,EAAaM,MAAM,EAAG,GAApC,QACA,yCAAgC,GAAfL,GAAmBM,QAAQ,GAA5C,QACA,sCACA,uBAAIL,KACJ,oCACA,uBAAIC,EAAO1B,KAAI,SAAA+B,GAAK,OAAI,4BAAwBA,EAAMC,KAA9B,OAAWD,EAAMC,kB,SCX5CC,EAAoB,WAC7B,OACI,UAACb,EAAD,YACI,oDACA,2BACI,yBAAI,SAAC,KAAD,CAAMF,GAAG,OAAT,qBACJ,yBAAI,SAAC,KAAD,CAAMA,GAAG,UAAT,8BCyBpB,EA3BqB,WAAO,IAAD,EAEvB,GAAkCgB,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,EAAY,WADDC,EAAAA,EAAAA,MACaC,MAAMC,YAAlB,QAA0B,IAQ5C,IANAC,EAAAA,EAAAA,YAAU,YACNrC,EAAAA,EAAAA,IAAa+B,GAASO,KAAKR,GAAcS,UAC1C,CAACR,SAIgBS,IAFIX,EAAhBjC,YAGJ,OACI,6BACI,SAACc,EAAA,EAAD,CAAK9B,KAAMqD,EAActB,MAAK,aAC9B,SAACK,EAAD,CAAWxB,KAAMqC,KACjB,mBACA,SAACF,EAAD,KACA,mBACA,SAAC,KAAD","sources":["api/api.js","api/getMoviesList.js","components/Nav/Nav.styled.js","components/Nav/Nav.jsx","pages/Movies/MovieDetails/MovieDetails.styled.js","components/MovieInfo/MovieInfo.jsx","components/MovieDetailAction/MovieDetailAction.jsx","pages/Movies/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst API_KEY = '686ce405e78c10a98219cd1fc59d1c0f';\nconst API_URL = 'https://api.themoviedb.org/3/';\n\nexport const apiRequest = (path, parameter = {}) => {\n    const params = Object.assign({ api_key: API_KEY }, parameter);\n    try {\n        const response = axios.get(API_URL + path, {params})\n        return response;\n    } catch (error) {\n        console.log(error);\n    }\n}","import { apiRequest } from \"./api\";\n\n// getting list of trending\nexport const  getMoviesList = async () => {\n    const response = await apiRequest('trending/movie/week');\n    response.data.results.map(movie => movie.poster_path = movie.poster_path !== null ?\n        (`https://image.tmdb.org/t/p/w500/` + movie.poster_path) : 'https://filmesiseriale.net/img/noposter.jpg' )\n    return response.data.results;\n}\n\n// getting list of movies by search\nexport const getMoviesSearch = async (query) => {\n    if (query !== '') {\n        try {\n            const response = await apiRequest('search/movie', { query: query });\n            response.data.results.map(movie => movie.poster_path = movie.poster_path !== null ?\n        (`https://image.tmdb.org/t/p/w500/` + movie.poster_path) : 'https://filmesiseriale.net/img/noposter.jpg')\n            return response.data;\n        } catch {\n        }\n    } else {\n        return {results: [], total_results: -1}\n    }\n}\n\n// get an info of one movie\nexport const getMovieInfo = async (id) => {\n    \n    const response = await apiRequest(`movie/${id}`);\n    response.data.poster_path = response.data.poster_path !== null ? (`https://image.tmdb.org/t/p/w500/` + response.data.poster_path) : ('https://filmesiseriale.net/img/noposter.jpg');\n    return response.data;\n}\n\n// get cast\nexport const getCast = async (id) => {\n\n    const response = await apiRequest(`movie/${id}/credits`);\n    response.data.cast.map(actor => actor.profile_path = actor.profile_path !== null ?\n        (`https://image.tmdb.org/t/p/w500` + actor.profile_path) : ('https://png.pngitem.com/pimgs/s/49-498069_talk-about-random-wiki-shy-guy-mario-hd.png'))\n    return response.data.cast;\n}\n\n// get reviews\nexport const getReviews = async (id) => {\n    const response = await apiRequest(`movie/${id}/reviews`);\n    return response.data.results;\n}","import { NavLink } from 'react-router-dom';\nimport styled from \"styled-components\";\n\nexport const BackLink = styled(NavLink)`\n    color: white;\n    margin-left: 10px;\n    width: 100px;\n    padding: 5px 5px;\n    text-align:center;\n    background: #00a2d3;\n    background-image: -webkit-linear-gradient(top, #00a2d3, #0d7796);\n    background-image: -moz-linear-gradient(top, #00a2d3, #0d7796);\n    background-image: -o-linear-gradient(top, #00a2d3, #0d7796);\n    background-image: linear-gradient(to bottom, #00a2d3, #0d7796);\n    color: white;\n    border-radius: 10px;\n    cursor: pointer;\n    user-select: none;\n    \n    :hover {\n        background: #0591ba;\n        background-image: -webkit-linear-gradient(top, #0591ba, #00a2d3);\n        background-image: -moz-linear-gradient(top, #0591ba, #00a2d3);\n        background-image: -o-linear-gradient(top, #0591ba, #00a2d3);\n        background-image: linear-gradient(to bottom, #0591ba, #00a2d3);\n    }\n\n    :active {\n        background: #00a2d3;\n    }\n\n    &.active {\n        background: #0d7796;\n    }\n`","import { BackLink } from \"./Nav.styled\";\n\nexport const Nav = ({ path, title }) => {\n    return (\n        <BackLink to={path}>\n            {title}\n        </BackLink>\n    )\n}","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n    display: flex;\n    margin: 10px;\n`\nexport const Info = styled.div`\n    margin: 10px;\n`\nexport const Img = styled.img`\n    width: 200px;\n`","import { Wrapper, Img, Info } from \"pages/Movies/MovieDetails/MovieDetails.styled\"\n\nexport const MovieInfo = ({ data }) => {\n    const { poster_path, title, release_date, vote_average, overview, genres } = data;\n\n    return (\n        <Wrapper>\n            <Img src={poster_path} alt='movie poster' />\n            <Info>\n                <h2>{title} ({release_date.slice(0, 4)})</h2>\n                <p>User Score: {(vote_average * 10).toFixed(0)}%</p>\n                <h3>Overview</h3>\n                <p>{overview}</p>\n                <h3>Genres</h3>\n                <p>{genres.map(genre => <span key={genre.name}>{genre.name}  </span>)}</p>\n            </Info>\n        </Wrapper>\n    )\n}","import { Link } from \"react-router-dom\";\nimport { Info } from \"pages/Movies/MovieDetails/MovieDetails.styled\";\n\nexport const MovieDetailAction = () => {\n    return (\n        <Info>\n            <h4>Additional information</h4>\n            <ul>\n                <li><Link to=\"cast\">Cast</Link></li>\n                <li><Link to=\"reviews\">Reviews</Link></li>\n            </ul>\n        </Info>\n    )\n}","import { useState, useEffect } from \"react\";\nimport { getMovieInfo } from \"api/getMoviesList\";\nimport { Outlet, useParams, useLocation } from \"react-router-dom\";\nimport { Nav } from \"components/Nav/Nav\";\nimport { MovieInfo } from \"components/MovieInfo/MovieInfo\";\nimport { MovieDetailAction } from \"components/MovieDetailAction/MovieDetailAction\";\n\nconst MovieDetails = () => {\n\n    const [movieInfo, setMovieInfo] = useState({});         // API movie info \n    const { movieId } = useParams();                        // the movie id\n    const location = useLocation();\n    const backLinkHref = location.state.from ?? \"/\";\n\n    useEffect(() => {\n        getMovieInfo(movieId).then(setMovieInfo).catch()\n    }, [movieId]);\n\n    const { poster_path } = movieInfo;\n\n    if (poster_path !== undefined) {\n        return (\n            <main>\n                <Nav path={backLinkHref} title={`Go back`} />\n                <MovieInfo data={movieInfo} />\n                <hr></hr>\n                <MovieDetailAction />\n                <hr></hr>\n                <Outlet />\n            </main>\n        )\n    }\n}\n\nexport default MovieDetails;"],"names":["API_KEY","API_URL","apiRequest","path","parameter","params","Object","assign","api_key","response","axios","error","console","log","getMoviesList","data","results","map","movie","poster_path","getMoviesSearch","query","total_results","getMovieInfo","id","getCast","cast","actor","profile_path","getReviews","BackLink","styled","NavLink","Nav","title","to","Wrapper","Info","Img","MovieInfo","release_date","vote_average","overview","genres","src","alt","slice","toFixed","genre","name","MovieDetailAction","useState","movieInfo","setMovieInfo","movieId","useParams","backLinkHref","useLocation","state","from","useEffect","then","catch","undefined"],"sourceRoot":""}