{"version":3,"file":"static/js/379.0a7540a8.chunk.js","mappings":"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","sources":["api/api.js","api/getMoviesList.js","pages/Home/Home.styled.js","components/SearchBar/SearchBar.styled.js","components/SearchBar/SearchBar.jsx","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx","utils/Box.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst API_KEY = '686ce405e78c10a98219cd1fc59d1c0f';\nconst API_URL = 'https://api.themoviedb.org/3/';\n\nexport const apiRequest = (path, parameter = {}) => {\n    const params = Object.assign({ api_key: API_KEY }, parameter);\n    try {\n        const response = axios.get(API_URL + path, {params})\n        return response;\n    } catch (error) {\n        console.log(error);\n    }\n}","import { apiRequest } from \"./api\";\n\n// getting list of trending\nexport const  getMoviesList = async () => {\n    const response = await apiRequest('trending/movie/week');\n    response.data.results.map(movie => movie.poster_path = movie.poster_path !== null ?\n        (`https://image.tmdb.org/t/p/w500/` + movie.poster_path) : 'https://filmesiseriale.net/img/noposter.jpg' )\n    return response.data.results;\n}\n\n// getting list of movies by search\nexport const getMoviesSearch = async (query) => {\n    if (query !== '') {\n        try {\n            const response = await apiRequest('search/movie', { query: query });\n            response.data.results.map(movie => movie.poster_path = movie.poster_path !== null ?\n        (`https://image.tmdb.org/t/p/w500/` + movie.poster_path) : 'https://filmesiseriale.net/img/noposter.jpg')\n            return response.data;\n        } catch {\n        }\n    } else {\n        return {results: [], total_results: -1}\n    }\n}\n\n// get an info of one movie\nexport const getMovieInfo = async (id) => {\n    \n    const response = await apiRequest(`movie/${id}`);\n    response.data.poster_path = response.data.poster_path !== null ? (`https://image.tmdb.org/t/p/w500/` + response.data.poster_path) : ('https://filmesiseriale.net/img/noposter.jpg');\n    return response.data;\n}\n\n// get cast\nexport const getCast = async (id) => {\n\n    const response = await apiRequest(`movie/${id}/credits`);\n    response.data.cast.map(actor => actor.profile_path = actor.profile_path !== null ?\n        (`https://image.tmdb.org/t/p/w500` + actor.profile_path) : ('https://png.pngitem.com/pimgs/s/49-498069_talk-about-random-wiki-shy-guy-mario-hd.png'))\n    return response.data.cast;\n}\n\n// get reviews\nexport const getReviews = async (id) => {\n    const response = await apiRequest(`movie/${id}/reviews`);\n    return response.data.results;\n}","import styled from \"styled-components\";\nimport { NavLink } from 'react-router-dom';\nimport { Box } from 'utils/Box';\n\nexport const ListOfMovies = styled(Box)`\n    display: flex;\n    flex-wrap: wrap;\n    margin-top: 50px;\n    width: 90%;\n    margin-left: auto;\n    margin-right: auto;\n    gap: 10px;\n`\nexport const MovieItem = styled(NavLink)`\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    width: calc((100% - 100px)/5);\n    background: none;\n    color: black;\n    text-align: center;\n    border-radius: 3px;\n    box-shadow: inset 0 0 0 1px #00a2d3, 0 0 0 2px rgba(0, 0, 0, 0.16);\n\n    :hover {\n        box-shadow: inset 0 0 0 1px #00a2d3, 0 0 0 3px rgba(0, 0, 0, 0.4);\n        background: #f0f0f0;\n    }\n`\nexport const Poster = styled.img`\n    display: block;\n    width: 100%;\n`\nexport const Title = styled.p`\n    padding: 0 5px;\n    margin-block-end: 0;\n    margin-block-start: 0;\n`\nexport const H1 = styled.h1`\n    display: block;\n    margin-top: 80px;\n    text-align: center;\n`\n","import styled from 'styled-components';\nimport arrow from 'images/arrow.png';\nimport bg from 'images/bg.png';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const Button = styled.button`\n    position: absolute;\n    top: 50%;\n    left:0%;\n    transform: translateY(-50%);\n    width: 48px;\n    height: 48px;\n    text-indent: 120%;\n    overflow: hidden;\n    background: none;\n    border: 0;\n    border-radius: 24px;\n    cursor: pointer;\n    -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.2), 0 1px rgba(255, 255, 255, 0.1);\n    box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.2), 0 1px rgba(255, 255, 255, 0.1);\n\n    :before {\n        content: '';\n        position: absolute;\n        top: 5px;\n        bottom: 5px;\n        left: 5px;\n        right: 5px;\n        background: #00a2d3;\n        border-radius: 24px;\n        background-image: -webkit-linear-gradient(top, #00a2d3, #0d7796);\n        background-image: -moz-linear-gradient(top, #00a2d3, #0d7796);\n        background-image: -o-linear-gradient(top, #00a2d3, #0d7796);\n        background-image: linear-gradient(to bottom, #00a2d3, #0d7796);\n        -webkit-box-shadow: inset 0 0 0 1px #00a2d3, 0 0 0 5px rgba(0, 0, 0, 0.16);\n        box-shadow: inset 0 0 0 1px #00a2d3, 0 0 0 5px rgba(0, 0, 0, 0.16);\n        }\n\n    :active:before, :hover:before {\n        background: #0591ba;\n        background-image: -webkit-linear-gradient(top, #0591ba, #00a2d3);\n        background-image: -moz-linear-gradient(top, #0591ba, #00a2d3);\n        background-image: -o-linear-gradient(top, #0591ba, #00a2d3);\n        background-image: linear-gradient(to bottom, #0591ba, #00a2d3);\n        }\n\n    :after {\n        content: '';\n        position: absolute;\n        top: 15px;\n        left: 12px;\n        width: 25px;\n        height: 19px;\n        background: url(${arrow}) 0 0 no-repeat;\n        background-repeat: no-repeat;\n        background-size: contain;\n        background-position-x: 2px;\n        }\n`\nexport const ButtonWrapper = styled.p`\n    position: absolute;\n    top: 15%;\n    left: calc(50% + 120px);\n    width: 32px;\n    height: 32px;\n    padding: 8px;\n    border-radius: 32px;\n    -webkit-box-shadow: 0 0 4px rgba(0, 0, 0, 0.35);\n    box-shadow: 0 0 4px rgba(0, 0, 0, 0.35);\n    transform: translateY(-50%);\n    background-color: #504f4f;\n`\nexport const Input = styled(Field)`\n    height: 40px;\n    width: 300px;\n    padding: 0 10px;\n    outline: gray;\n    background: rgba(0, 0, 0, 0.20);\n\n    font-size: 20px;\n    color: #bbb;\n    text-shadow: 1px 1px 1px black;\n\n    border: 0;\n    border-radius: 5px;\n    -webkit-box-shadow: inset 0 1px 4px rgba(0, 0, 0, 0.3),\n    0 1px rgba(255, 255, 255, 0.06);\n    box-shadow: inset 0 1px 4px rgba(0, 0, 0, 0.3),\n    0 1px rgba(255, 255, 255, 0.06);\n\n  :focus {\n    color: white;\n    background: rgba(0, 0, 0, 0.1);\n    outline: 0;\n  }\n`\nexport const SearchForm = styled(Form)`\n    position: relative;\n`\nexport const FormikWrapper = styled.div`\n    position: fixed;\n    top: 50px;\n    left: 0;\n    width: 100%;\n    display: block;\n    height: 60px;\n    background: #878787 url(${bg}) 0 0 repeat;\n    text-align: center;\n    padding-top: 10px;\n`\nexport const Error = styled(ErrorMessage)`\n    position: absolute;\n    top: 45px;\n    left: 50%;\n    background: #ffffff;\n    transform: translateX(-50%);\n    padding: 0 10px;\n`","import { Formik } from 'formik';\nimport { Button, ButtonWrapper, Input, SearchForm, FormikWrapper, Error } from './SearchBar.styled';\nimport PropTypes from 'prop-types';\n\nexport const SearchBar = ({ onSearch }) => {\n    return (\n        <Formik\n            initialValues={{ query: '' }}\n            onSubmit={onSearch}>\n            <FormikWrapper>\n                <SearchForm>\n                    <Input name='query' type=\"text\" autoComplete=\"off\" autoFocus placeholder=\"Search movies\" />\n                    <Error name='query' component='div' />\n                    <ButtonWrapper>\n                        <Button type=\"submit\">Search</Button>\n                    </ButtonWrapper>\n                </SearchForm>\n            </FormikWrapper>\n        </Formik>\n    )\n}\n\nSearchBar.propTypes = {\n    onSearch: PropTypes.func,\n}","import styled from 'styled-components';\nimport { Box } from 'utils/Box';\n\nexport const FindText = styled.p`\n    font-size: large;\n    margin-bottom: 20px;\n`\nexport const FindBlock = styled.div`\n    text-align: center;\n    margin-top: 150px;\n`\nexport const ListOfMovies = styled(Box)`\n    display: flex;\n    flex-wrap: wrap;\n    margin-top: 150px;\n    width: 90%;\n    margin-left: auto;\n    margin-right: auto;\n    gap: 10px;\n`","import { useState, useEffect } from \"react\";\nimport { getMoviesSearch } from 'api/getMoviesList';\nimport { MovieItem, Poster, Title } from '../../pages/Home/Home.styled'\nimport { useLocation, useSearchParams, Outlet } from \"react-router-dom\";\nimport { SearchBar } from \"components/SearchBar/SearchBar\";\nimport { FindText, FindBlock, ListOfMovies } from \"./Movies.styled\";\nimport nothing from '../../images/nothing.png';\n\nconst Movies = () => {\n    const [query, setQuery] = useState('');             // a search word or frase\n    const [movies, setMovies] = useState([]);           // API movie list by search frase\n    const [total, setTotal] = useState(-1);             // marker\n    const location = useLocation();                     \n    const [searchParams, setSearchParams] = useSearchParams();\n    const name = searchParams.get(\"query\");\n\n    // render a page after return from MovieDetails\n    if (name !== null & name !== query) {\n        setQuery(name)\n    }\n    // processing search-btn click\n    const onSearch = (data) => {\n        if (data.query !== query) {\n            setQuery(() => data.query);\n            setSearchParams({ query: data.query })\n        }\n    }\n\n    useEffect(() => {\n        getMoviesSearch(query)\n            .then(data => {\n                setMovies(data.results);\n                setTotal(data.total_results);\n            }).catch('error')\n    }, [query]);\n\n\n    // render 1 of 3 options by total-value: =(-1) - only searchbar;  >0 - list jf movies; =0 - nothing has been found\n    if (total === -1) {\n        return (      \n            <SearchBar onSearch={onSearch} />\n        )\n\n    } else if (total > 0) {\n        return (\n            <main>\n                <SearchBar onSearch={onSearch} />\n                <ListOfMovies as='main'>\n                    {movies.map(({ id, title, poster_path }) => (\n                        <MovieItem to={`${id}`} key={id} state={{ from: location }}>\n                            <Poster src={poster_path} alt='movie poster' />\n                            <Title>{title}</Title>\n                        </MovieItem>))}\n                    <Outlet />\n                </ListOfMovies>\n            </main>\n        )\n    } else {\n        return (\n            <main>\n                <SearchBar onSearch={onSearch} />\n                <FindBlock as='main'>\n                <FindText>Nothing was finded :(</FindText>\n                    <img src={nothing} alt='nothing is found'/>\n                </FindBlock>\n            </main>\n        )\n    }\n}\n\nexport default Movies;\n\n","import styled from 'styled-components';\nimport {\n    color,\n    space,\n    layout,\n    flexbox,\n    background,\n    border,\n    shadow\n} from 'styled-system';\n\nexport const Box = styled('div')(\n    color,\n    space,\n    layout,\n    flexbox,\n    background,\n    border,\n    shadow\n)"],"names":["API_KEY","API_URL","apiRequest","path","parameter","params","Object","assign","api_key","response","axios","error","console","log","getMoviesList","data","results","map","movie","poster_path","getMoviesSearch","query","total_results","getMovieInfo","id","getCast","cast","actor","profile_path","getReviews","ListOfMovies","styled","Box","MovieItem","NavLink","Poster","Title","H1","Button","arrow","ButtonWrapper","Input","Field","SearchForm","Form","FormikWrapper","bg","Error","ErrorMessage","SearchBar","onSearch","initialValues","onSubmit","name","type","autoComplete","autoFocus","placeholder","component","FindText","FindBlock","useState","setQuery","movies","setMovies","total","setTotal","location","useLocation","useSearchParams","searchParams","setSearchParams","get","useEffect","then","catch","as","title","to","state","from","src","alt","nothing","color","space","layout","flexbox","background","border","shadow"],"sourceRoot":""}