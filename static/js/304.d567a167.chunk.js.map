{"version":3,"file":"static/js/304.d567a167.chunk.js","mappings":"4TAEMA,EAAU,mCACVC,EAAU,gCAEHC,EAAa,SAACC,GAA0B,IAApBC,EAAmB,uDAAP,GACnCC,EAASC,OAAOC,OAAO,CAAEC,QAASR,GAAWI,GACnD,IACI,IAAMK,EAAWC,IAAAA,IAAUT,EAAUE,EAAM,CAACE,OAAAA,IAC5C,OAAOI,EACT,MAAOE,GACLC,QAAQC,IAAIF,KCVdG,EAAW,8CACXC,EAAU,mCAGFC,EAAa,mCAAG,oGACHd,EAAW,uBADR,cACpBO,EADoB,QAEjBQ,KAAKC,QAAQC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,YAAoC,OAAtBD,EAAMC,YACxDN,EAAUK,EAAMC,YAAeP,KAHV,kBAInBL,EAASQ,KAAKC,SAJK,2CAAH,qDAQdI,EAAe,mCAAG,WAAOC,GAAP,0EACb,KAAVA,EADuB,0CAGIrB,EAAW,eAAgB,CAAEqB,MAAOA,IAHxC,cAGbd,EAHa,QAIVQ,KAAKC,QAAQC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,YAAoC,OAAtBD,EAAMC,YACxDN,EAAUK,EAAMC,YAAeP,KALjB,kBAMZL,EAASQ,MANG,yFAUhB,CAACC,QAAS,GAAIM,eAAgB,IAVd,yDAAH,sDAefC,EAAY,mCAAG,WAAOC,GAAP,uFAEDxB,EAAW,SAAD,OAAUwB,IAFnB,cAElBjB,EAFkB,QAGfQ,KAAKI,YAA4C,OAA9BZ,EAASQ,KAAKI,YACrCN,EAAUN,EAASQ,KAAKI,YAAeP,EAJpB,kBAKjBL,EAASQ,MALQ,2CAAH,sDASZU,EAAO,mCAAG,WAAOD,GAAP,uFAEIxB,EAAW,SAAD,OAAUwB,EAAV,aAFd,cAEbjB,EAFa,QAGVQ,KAAKW,KAAKT,KAAI,SAAAU,GAAK,OAAIA,EAAMC,aAAsC,OAAvBD,EAAMC,aACtDf,EAAUc,EAAMC,aAChB,2FALc,kBAMZrB,EAASQ,KAAKW,MANF,2CAAH,sDAUPG,EAAU,mCAAG,WAAOL,GAAP,uFACCxB,EAAW,SAAD,OAAUwB,EAAV,aADX,cAChBjB,EADgB,yBAEfA,EAASQ,KAAKC,SAFC,2CAAH,uD,sGCpCVc,GAAMC,EAAAA,EAAAA,IAAO,MAAPA,CACfC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,ICdSC,GAAeR,EAAAA,EAAAA,IAAOD,EAAPC,CAAH,2KASZS,GAAYT,EAAAA,EAAAA,IAAOU,EAAAA,GAAPV,CAAH,obAgBTW,EAASX,EAAAA,GAAAA,IAAH,+DAINY,EAAQZ,EAAAA,GAAAA,EAAH,mG,SC9BLa,EAAY,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SACxC,OACI,SAACR,EAAD,CAAcS,GAAG,MAAjB,SACKH,EAAK5B,KAAI,gBAAGO,EAAH,EAAGA,GAAIyB,EAAP,EAAOA,MAAO9B,EAAd,EAAcA,YAAd,OACN,UAACqB,EAAD,CAAWU,GAAE,UAAKH,GAAL,OAAgBvB,GAAe2B,MAAO,CAAEC,KAAMN,GAA3D,WACI,SAACJ,EAAD,CAAQW,IAAKlC,EAAamC,IAAI,kBAC9B,SAACX,EAAD,UAAQM,MAF4BzB,U,yFCL3C+B,E,QAAKxB,GAAAA,GAAH,yH,iDCoBf,EAhBa,WACT,OAAkCyB,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACMZ,GAAWa,EAAAA,EAAAA,MAMjB,OAJAC,EAAAA,EAAAA,YAAU,YACN9C,EAAAA,EAAAA,MAAgB+C,KAAKH,GAAcI,MAAM,WAC1C,KAGC,iCACI,SAACP,EAAD,8BACA,SAACX,EAAA,EAAD,CAAWC,KAAMY,EAAWX,SAAUA,EAAUC,SAAS","sources":["api/api.js","api/getMoviesList.js","utils/Box.jsx","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","pages/Home/Home.styled.js","pages/Home/Home.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst API_KEY = '686ce405e78c10a98219cd1fc59d1c0f';\nconst API_URL = 'https://api.themoviedb.org/3/';\n\nexport const apiRequest = (path, parameter = {}) => {\n    const params = Object.assign({ api_key: API_KEY }, parameter);\n    try {\n        const response = axios.get(API_URL + path, {params})\n        return response;\n    } catch (error) {\n        console.log(error);\n    }\n}","import { apiRequest } from \"./api\";\nconst noPoster = 'https://filmesiseriale.net/img/noposter.jpg';\nconst URL_API = 'https://image.tmdb.org/t/p/w500/';\n\n// getting list of trending\nexport const  getMoviesList = async () => {\n    const response = await apiRequest('trending/movie/week');\n    response.data.results.map(movie => movie.poster_path = movie.poster_path !== null ?\n        (URL_API + movie.poster_path) : noPoster)\n    return response.data.results;\n}\n\n// getting list of movies by search\nexport const getMoviesSearch = async (query) => {\n    if (query !== '') {\n        try {\n            const response = await apiRequest('search/movie', { query: query });\n            response.data.results.map(movie => movie.poster_path = movie.poster_path !== null ?\n                (URL_API + movie.poster_path) : noPoster)\n            return response.data;\n        } catch {\n        }\n    } else {\n        return {results: [], total_results: -1}\n    }\n}\n\n// get an info of one movie\nexport const getMovieInfo = async (id) => {\n    \n    const response = await apiRequest(`movie/${id}`);\n    response.data.poster_path = response.data.poster_path !== null ?\n        (URL_API + response.data.poster_path) : noPoster;\n    return response.data;\n}\n\n// get cast\nexport const getCast = async (id) => {\n\n    const response = await apiRequest(`movie/${id}/credits`);\n    response.data.cast.map(actor => actor.profile_path = actor.profile_path !== null ?\n        (URL_API + actor.profile_path) :\n        ('https://png.pngitem.com/pimgs/s/49-498069_talk-about-random-wiki-shy-guy-mario-hd.png'))\n    return response.data.cast;\n}\n\n// get reviews\nexport const getReviews = async (id) => {\n    const response = await apiRequest(`movie/${id}/reviews`);\n    return response.data.results;\n}","import styled from 'styled-components';\nimport {\n    color,\n    space,\n    layout,\n    flexbox,\n    background,\n    border,\n    shadow\n} from 'styled-system';\n\nexport const Box = styled('div')(\n    color,\n    space,\n    layout,\n    flexbox,\n    background,\n    border,\n    shadow\n)","import styled from \"styled-components\";\nimport { NavLink } from 'react-router-dom';\nimport { Box } from 'utils/Box';\n\nexport const ListOfMovies = styled(Box)`\n    display: flex;\n    flex-wrap: wrap;\n    margin-top: 80px;\n    width: 90%;\n    margin-left: auto;\n    margin-right: auto;\n    gap: 10px;\n`\nexport const MovieItem = styled(NavLink)`\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    width: calc((100% - 40px)/5);\n    background: none;\n    color: black;\n    text-align: center;\n    border-radius: 3px;\n    box-shadow: inset 0 0 0 1px #00a2d3, 0 0 0 2px rgba(0, 0, 0, 0.16);\n\n    :hover {\n        box-shadow: inset 0 0 0 1px #00a2d3, 0 0 0 3px rgba(0, 0, 0, 0.4);\n        background: #f0f0f0;\n    }\n`\nexport const Poster = styled.img`\n    display: block;\n    width: 100%;\n`\nexport const Title = styled.p`\n    padding: 0 5px;\n    margin-block-end: 0;\n    margin-block-start: 0;\n`","import { ListOfMovies, MovieItem, Poster, Title } from './MovieList.styled';\nimport PropTypes from 'prop-types';\n\nexport const MovieList = ({ list, location, pagePath }) => {\n    return (\n        <ListOfMovies as='div'>\n            {list.map(({ id, title, poster_path }) => (\n                <MovieItem to={`${pagePath}${id}`} key={id} state={{ from: location }}>\n                    <Poster src={poster_path} alt='movie poster' />\n                    <Title>{title}</Title>\n                </MovieItem>))}\n        </ListOfMovies>\n    )\n}\n\nMovieList.propTypes = {\n    list: PropTypes.array,\n    location: PropTypes.object,\n    pagePath: PropTypes.string\n}","import styled from \"styled-components\";\n\nexport const H1 = styled.h1`\n    display: block;\n    margin-top: -80px;\n    margin-bottom: -40px;\n    text-align: center;\n`\n","import { H1 } from './Home.styled';\nimport { getMoviesList } from 'api/getMoviesList';\nimport { useState, useEffect } from 'react';\nimport { useLocation } from \"react-router-dom\";\nimport { MovieList } from 'components/MovieList/MovieList';\n\nconst Home = () => {\n    const [trendList, setTrendList] = useState([]);       // API trending list\n    const location = useLocation();\n\n    useEffect(() => {\n        getMoviesList().then(setTrendList).catch('error')\n    }, []);\n\n    return (\n        <>\n            <H1>Trending today</H1>\n            <MovieList list={trendList} location={location} pagePath='movies/' />\n        </>\n    )\n}  \n\nexport default Home;"],"names":["API_KEY","API_URL","apiRequest","path","parameter","params","Object","assign","api_key","response","axios","error","console","log","noPoster","URL_API","getMoviesList","data","results","map","movie","poster_path","getMoviesSearch","query","total_results","getMovieInfo","id","getCast","cast","actor","profile_path","getReviews","Box","styled","color","space","layout","flexbox","background","border","shadow","ListOfMovies","MovieItem","NavLink","Poster","Title","MovieList","list","location","pagePath","as","title","to","state","from","src","alt","H1","useState","trendList","setTrendList","useLocation","useEffect","then","catch"],"sourceRoot":""}