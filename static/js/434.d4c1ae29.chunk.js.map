{"version":3,"file":"static/js/434.d4c1ae29.chunk.js","mappings":"4TAEMA,EAAU,mCACVC,EAAU,gCAEHC,EAAa,SAACC,GAA0B,IAApBC,EAAmB,uDAAP,GACnCC,EAASC,OAAOC,OAAO,CAAEC,QAASR,GAAWI,GACnD,IACI,IAAMK,EAAWC,IAAAA,IAAUT,EAAUE,EAAM,CAACE,OAAAA,IAC5C,OAAOI,EACT,MAAOE,GACLC,QAAQC,IAAIF,KCRNG,EAAa,mCAAG,oGACHZ,EAAW,uBADR,cACpBO,EADoB,QAEjBM,KAAKC,QAAQC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,YAAoC,OAAtBD,EAAMC,YACxD,mCAAqCD,EAAMC,YAAe,iDAHrC,kBAInBV,EAASM,KAAKC,SAJK,2CAAH,qDAQdI,EAAe,mCAAG,WAAOC,GAAP,0EACb,KAAVA,EADuB,0CAGInB,EAAW,eAAgB,CAAEmB,MAAOA,IAHxC,cAGbZ,EAHa,QAIVM,KAAKC,QAAQC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,YAAoC,OAAtBD,EAAMC,YAChE,mCAAqCD,EAAMC,YAAe,iDALpC,kBAMZV,EAASM,MANG,yFAUhB,CAACC,QAAS,GAAIM,eAAgB,IAVd,yDAAH,sDAefC,EAAY,mCAAG,WAAOC,GAAP,uFAEDtB,EAAW,SAAD,OAAUsB,IAFnB,cAElBf,EAFkB,QAGfM,KAAKI,YAA4C,OAA9BV,EAASM,KAAKI,YAAwB,mCAAqCV,EAASM,KAAKI,YAAgB,8CAH7G,kBAIjBV,EAASM,MAJQ,2CAAH,sDAQZU,EAAO,mCAAG,WAAOD,GAAP,uFAEItB,EAAW,SAAD,OAAUsB,EAAV,aAFd,cAEbf,EAFa,QAGVM,KAAKW,KAAKT,KAAI,SAAAU,GAAK,OAAIA,EAAMC,aAAsC,OAAvBD,EAAMC,aACtD,kCAAoCD,EAAMC,aAAiB,2FAJ7C,kBAKZnB,EAASM,KAAKW,MALF,2CAAH,sDASPG,EAAU,mCAAG,WAAOL,GAAP,uFACCtB,EAAW,SAAD,OAAUsB,EAAV,aADX,cAChBf,EADgB,yBAEfA,EAASM,KAAKC,SAFC,2CAAH,uD,wHCzCVc,E,QAAMC,GAAAA,IAAH,2C,SCwBhB,EArBa,WACT,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOR,EAAP,KAAaS,EAAb,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACNX,EAAAA,EAAAA,IAAQO,GAASK,KAAKF,GAASG,UAChC,CAACN,KAGA,0BACI,wBACKN,EAAKT,KAAI,gBAAEO,EAAF,EAAEA,GAAII,EAAN,EAAMA,aAAcW,EAApB,EAAoBA,KAAMC,EAA1B,EAA0BA,UAA1B,OACN,2BACI,SAACV,EAAD,CAAKW,IAAKb,EAAcc,IAAI,WAC5B,yBAAIH,EAAJ,OAAcC,OAFThB","sources":["api/api.js","api/getMoviesList.js","pages/Movies/MovieDetails/Cast/Cast.styled.js","pages/Movies/MovieDetails/Cast/Cast.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst API_KEY = '686ce405e78c10a98219cd1fc59d1c0f';\nconst API_URL = 'https://api.themoviedb.org/3/';\n\nexport const apiRequest = (path, parameter = {}) => {\n    const params = Object.assign({ api_key: API_KEY }, parameter);\n    try {\n        const response = axios.get(API_URL + path, {params})\n        return response;\n    } catch (error) {\n        console.log(error);\n    }\n}","import { apiRequest } from \"./api\";\n\n// getting list of trending\nexport const  getMoviesList = async () => {\n    const response = await apiRequest('trending/movie/week');\n    response.data.results.map(movie => movie.poster_path = movie.poster_path !== null ?\n        (`https://image.tmdb.org/t/p/w500/` + movie.poster_path) : 'https://filmesiseriale.net/img/noposter.jpg' )\n    return response.data.results;\n}\n\n// getting list of movies by search\nexport const getMoviesSearch = async (query) => {\n    if (query !== '') {\n        try {\n            const response = await apiRequest('search/movie', { query: query });\n            response.data.results.map(movie => movie.poster_path = movie.poster_path !== null ?\n        (`https://image.tmdb.org/t/p/w500/` + movie.poster_path) : 'https://filmesiseriale.net/img/noposter.jpg')\n            return response.data;\n        } catch {\n        }\n    } else {\n        return {results: [], total_results: -1}\n    }\n}\n\n// get an info of one movie\nexport const getMovieInfo = async (id) => {\n    \n    const response = await apiRequest(`movie/${id}`);\n    response.data.poster_path = response.data.poster_path !== null ? (`https://image.tmdb.org/t/p/w500/` + response.data.poster_path) : ('https://filmesiseriale.net/img/noposter.jpg');\n    return response.data;\n}\n\n// get cast\nexport const getCast = async (id) => {\n\n    const response = await apiRequest(`movie/${id}/credits`);\n    response.data.cast.map(actor => actor.profile_path = actor.profile_path !== null ?\n        (`https://image.tmdb.org/t/p/w500` + actor.profile_path) : ('https://png.pngitem.com/pimgs/s/49-498069_talk-about-random-wiki-shy-guy-mario-hd.png'))\n    return response.data.cast;\n}\n\n// get reviews\nexport const getReviews = async (id) => {\n    const response = await apiRequest(`movie/${id}/reviews`);\n    return response.data.results;\n}","import styled from \"styled-components\";\n\nexport const Img = styled.img`\n    width: 100px;\n`","import { getCast } from 'api/getMoviesList';\nimport { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { Img } from './Cast.styled';\n\nconst Cast = () => {\n    const { movieId } = useParams();\n    const [cast, setCast] = useState([]);\n\n    useEffect(() => {\n        getCast(movieId).then(setCast).catch()\n    }, [movieId])\n\n    return (\n        <div>\n            <ul>\n                {cast.map(({id, profile_path, name, character }) => (\n                    <li key={id}>\n                        <Img src={profile_path} alt=\"actor\" />\n                        <p>{name} as {character}</p>\n                    </li>))}\n            </ul>\n        </div>\n    )\n}\n\nexport default Cast;"],"names":["API_KEY","API_URL","apiRequest","path","parameter","params","Object","assign","api_key","response","axios","error","console","log","getMoviesList","data","results","map","movie","poster_path","getMoviesSearch","query","total_results","getMovieInfo","id","getCast","cast","actor","profile_path","getReviews","Img","styled","movieId","useParams","useState","setCast","useEffect","then","catch","name","character","src","alt"],"sourceRoot":""}