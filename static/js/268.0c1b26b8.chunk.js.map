{"version":3,"file":"static/js/268.0c1b26b8.chunk.js","mappings":"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","sources":["api/api.js","api/getMoviesList.js","components/MovieInfo/MovieInfo.styled.js","components/MovieInfo/MovieInfo.jsx","components/MovieDetailAction/MovieDetailAction.styled.js","components/MovieDetailAction/MovieDetailAction.jsx","components/BackLink/BackLink.jsx","pages/Movies/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst API_KEY = '686ce405e78c10a98219cd1fc59d1c0f';\nconst API_URL = 'https://api.themoviedb.org/3/';\n\nexport const apiRequest = (path, parameter = {}) => {\n    const params = Object.assign({ api_key: API_KEY }, parameter);\n    try {\n        const response = axios.get(API_URL + path, {params})\n        return response;\n    } catch (error) {\n        console.log(error);\n    }\n}","import { apiRequest } from \"./api\";\nconst noPoster = 'https://filmesiseriale.net/img/noposter.jpg';\nconst URL_API = 'https://image.tmdb.org/t/p/w500/';\n\n// getting list of trending\nexport const  getMoviesList = async () => {\n    const response = await apiRequest('trending/movie/week');\n    response.data.results.map(movie => movie.poster_path = movie.poster_path !== null ?\n        (URL_API + movie.poster_path) : noPoster)\n    return response.data.results;\n}\n\n// getting list of movies by search\nexport const getMoviesSearch = async (query) => {\n    if (query !== '') {\n        try {\n            const response = await apiRequest('search/movie', { query: query });\n            response.data.results.map(movie => movie.poster_path = movie.poster_path !== null ?\n                (URL_API + movie.poster_path) : noPoster)\n            return response.data;\n        } catch {\n        }\n    } else {\n        return {results: [], total_results: -1}\n    }\n}\n\n// get an info of one movie\nexport const getMovieInfo = async (id) => {\n    \n    const response = await apiRequest(`movie/${id}`);\n    response.data.poster_path = response.data.poster_path !== null ?\n        (URL_API + response.data.poster_path) : noPoster;\n    return response.data;\n}\n\n// get cast\nexport const getCast = async (id) => {\n\n    const response = await apiRequest(`movie/${id}/credits`);\n    response.data.cast.map(actor => actor.profile_path = actor.profile_path !== null ?\n        (URL_API + actor.profile_path) :\n        ('https://png.pngitem.com/pimgs/s/49-498069_talk-about-random-wiki-shy-guy-mario-hd.png'))\n    return response.data.cast;\n}\n\n// get reviews\nexport const getReviews = async (id) => {\n    const response = await apiRequest(`movie/${id}/reviews`);\n    return response.data.results;\n}","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n    display: flex;\n    margin: 10px;\n`\nexport const Img = styled.img`\n    width: 200px;\n`\nexport const Info = styled.div`\n    margin: 10px;\n`","import { Wrapper, Img, Info } from \"components/MovieInfo/MovieInfo.styled\";\nimport PropTypes from 'prop-types';\n\nexport const MovieInfo = ({ data }) => {\n    const { poster_path, title, release_date, vote_average, overview, genres } = data;\n\n    return (\n        <Wrapper>\n            <Img src={poster_path} alt='movie poster' />\n            <Info>\n                <h2>{title} ({release_date.slice(0, 4)})</h2>\n                <p>User Score: {(vote_average * 10).toFixed(0)}%</p>\n                <h3>Overview</h3>\n                <p>{overview}</p>\n                <h3>Genres</h3>\n                <p>{genres.map(genre => <span key={genre.name}>{genre.name}  </span>)}</p>\n            </Info>\n        </Wrapper>\n    )\n}\n\nMovieInfo.propTypes = {\n  data: PropTypes.object\n}","import styled from \"styled-components\";\n\nexport const Info = styled.div`\n    margin: 10px;\n`","import { Link } from \"react-router-dom\";\nimport { Info } from \"components/MovieDetailAction/MovieDetailAction.styled\";\nimport PropTypes from 'prop-types';\n\nexport const MovieDetailAction = ({ state }) => {\n\n    return (\n        <Info>\n            <h4>Additional information</h4>\n            <ul>\n                <li><Link to=\"cast\" state={state} >Cast</Link></li>\n                <li><Link to=\"reviews\" state={state} >Reviews</Link></li>\n            </ul>\n        </Info>\n    )\n}\n\nMovieDetailAction.propTypes = {\n  location: PropTypes.object\n}","import { HiArrowLeft } from \"react-icons/hi\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport PropTypes from 'prop-types';\n\nconst StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n\nBackLink.propTypes = {\n  children: PropTypes.string,\n}","import { useState, useEffect } from \"react\";\nimport { Outlet, useParams, useLocation } from \"react-router-dom\";\nimport { MovieInfo } from \"components/MovieInfo/MovieInfo\";\nimport { MovieDetailAction } from \"components/MovieDetailAction/MovieDetailAction\";\nimport { BackLink } from \"components/BackLink/BackLink\";\nimport { getMovieInfo } from \"api/getMoviesList\";\n\nconst MovieDetails = () => {\n    const [movieInfo, setMovieInfo] = useState({});         // API movie info \n    const { movieId } = useParams();                        // the movie id\n    const location = useLocation();\n    const [backLinkRef, setBackLinkRef] = useState(undefined)\n    const { poster_path } = movieInfo;\n\n    useEffect(() => {\n        getMovieInfo(movieId).then(setMovieInfo).catch();\n    }, [movieId]);\n\n    useEffect(() => {\n        if (!backLinkRef) {\n            setBackLinkRef(location.state?.from ?? '/')\n        }\n    }, [location, backLinkRef]);\n\n    if (poster_path !== undefined) {\n        return (\n            <>\n                <BackLink to={backLinkRef} children={`Go back`} />\n                <MovieInfo data={movieInfo} />\n                <hr></hr>\n                <MovieDetailAction state={{from: location}} />\n                <hr></hr>\n                <Outlet />\n            </>\n        )\n    }\n}\n\nexport default MovieDetails;"],"names":["API_KEY","API_URL","apiRequest","path","parameter","params","Object","assign","api_key","response","axios","error","console","log","noPoster","URL_API","getMoviesList","data","results","map","movie","poster_path","getMoviesSearch","query","total_results","getMovieInfo","id","getCast","cast","actor","profile_path","getReviews","Wrapper","styled","Img","Info","MovieInfo","title","release_date","vote_average","overview","genres","src","alt","slice","toFixed","genre","name","MovieDetailAction","state","to","StyledLink","Link","BackLink","children","size","useState","movieInfo","setMovieInfo","movieId","useParams","location","useLocation","undefined","backLinkRef","setBackLinkRef","useEffect","then","catch","from"],"sourceRoot":""}