{"version":3,"file":"static/js/544.c1b5b227.chunk.js","mappings":"4TAEMA,EAAU,mCACVC,EAAU,gCAEHC,EAAa,SAACC,GAA0B,IAApBC,EAAmB,uDAAP,GACnCC,EAASC,OAAOC,OAAO,CAAEC,QAASR,GAAWI,GACnD,IACI,IAAMK,EAAWC,IAAAA,IAAUT,EAAUE,EAAM,CAACE,OAAAA,IAC5C,OAAOI,EACT,MAAOE,GACLC,QAAQC,IAAIF,KCRNG,EAAa,mCAAG,oGACHZ,EAAW,uBADR,cACpBO,EADoB,QAEjBM,KAAKC,QAAQC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,YAAoC,OAAtBD,EAAMC,YACxD,mCAAqCD,EAAMC,YAAe,iDAHrC,kBAInBV,EAASM,KAAKC,SAJK,2CAAH,qDAQdI,EAAe,mCAAG,WAAOC,GAAP,0EACb,KAAVA,EADuB,0CAGInB,EAAW,eAAgB,CAAEmB,MAAOA,IAHxC,cAGbZ,EAHa,QAIVM,KAAKC,QAAQC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,YAAoC,OAAtBD,EAAMC,YAChE,mCAAqCD,EAAMC,YAAe,iDALpC,kBAMZV,EAASM,MANG,yFAUhB,CAACC,QAAS,GAAIM,eAAgB,IAVd,yDAAH,sDAefC,EAAY,mCAAG,WAAOC,GAAP,uFAEDtB,EAAW,SAAD,OAAUsB,IAFnB,cAElBf,EAFkB,QAGfM,KAAKI,YAA4C,OAA9BV,EAASM,KAAKI,YAAwB,mCAAqCV,EAASM,KAAKI,YAAgB,8CAH7G,kBAIjBV,EAASM,MAJQ,2CAAH,sDAQZU,EAAO,mCAAG,WAAOD,GAAP,uFAEItB,EAAW,SAAD,OAAUsB,EAAV,aAFd,cAEbf,EAFa,QAGVM,KAAKW,KAAKT,KAAI,SAAAU,GAAK,OAAIA,EAAMC,aAAsC,OAAvBD,EAAMC,aACtD,kCAAoCD,EAAMC,aAAiB,2FAJ7C,kBAKZnB,EAASM,KAAKW,MALF,2CAAH,sDASPG,EAAU,mCAAG,WAAOL,GAAP,uFACCtB,EAAW,SAAD,OAAUsB,EAAV,aADX,cAChBf,EADgB,yBAEfA,EAASM,KAAKC,SAFC,2CAAH,uD,0FCfvB,UAvBa,WAET,OAAwCc,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MAMjB,OAJAC,EAAAA,EAAAA,YAAU,YACNrB,EAAAA,EAAAA,MAAgBsB,KAAKJ,GAAiBK,MAAM,WAC7C,KAGC,6BACI,SAAC,EAAAC,GAAD,8BACA,SAAC,KAAD,CAAcC,GAAG,MAAjB,SACKR,EAAad,KAAI,gBAAGO,EAAH,EAAGA,GAAIgB,EAAP,EAAOA,MAAOrB,EAAd,EAAcA,YAAd,OACd,UAAC,KAAD,CAAWsB,GAAE,iBAAYjB,GAAekB,MAAO,CAAEC,KAAMV,GAAvD,WACI,SAAC,KAAD,CAAQW,IAAKzB,EAAa0B,IAAI,kBAC9B,SAAC,KAAD,UAAQL,MAFwBhB,a,0MCf3CsB,GAAeC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,CAAH,2KASZE,GAAYF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,qbAgBTI,EAASJ,EAAAA,GAAAA,IAAH,+DAINK,EAAQL,EAAAA,GAAAA,EAAH,mGAKLT,EAAKS,EAAAA,GAAAA,GAAH,8F,4EC3BFC,GAAMD,EAAAA,EAAAA,IAAO,MAAPA,CACfM,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA","sources":["api/api.js","api/getMoviesList.js","pages/Home/Home.jsx","pages/Home/Home.styled.js","utils/Box.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst API_KEY = '686ce405e78c10a98219cd1fc59d1c0f';\nconst API_URL = 'https://api.themoviedb.org/3/';\n\nexport const apiRequest = (path, parameter = {}) => {\n    const params = Object.assign({ api_key: API_KEY }, parameter);\n    try {\n        const response = axios.get(API_URL + path, {params})\n        return response;\n    } catch (error) {\n        console.log(error);\n    }\n}","import { apiRequest } from \"./api\";\n\n// getting list of trending\nexport const  getMoviesList = async () => {\n    const response = await apiRequest('trending/movie/week');\n    response.data.results.map(movie => movie.poster_path = movie.poster_path !== null ?\n        (`https://image.tmdb.org/t/p/w500/` + movie.poster_path) : 'https://filmesiseriale.net/img/noposter.jpg' )\n    return response.data.results;\n}\n\n// getting list of movies by search\nexport const getMoviesSearch = async (query) => {\n    if (query !== '') {\n        try {\n            const response = await apiRequest('search/movie', { query: query });\n            response.data.results.map(movie => movie.poster_path = movie.poster_path !== null ?\n        (`https://image.tmdb.org/t/p/w500/` + movie.poster_path) : 'https://filmesiseriale.net/img/noposter.jpg')\n            return response.data;\n        } catch {\n        }\n    } else {\n        return {results: [], total_results: -1}\n    }\n}\n\n// get an info of one movie\nexport const getMovieInfo = async (id) => {\n    \n    const response = await apiRequest(`movie/${id}`);\n    response.data.poster_path = response.data.poster_path !== null ? (`https://image.tmdb.org/t/p/w500/` + response.data.poster_path) : ('https://filmesiseriale.net/img/noposter.jpg');\n    return response.data;\n}\n\n// get cast\nexport const getCast = async (id) => {\n\n    const response = await apiRequest(`movie/${id}/credits`);\n    response.data.cast.map(actor => actor.profile_path = actor.profile_path !== null ?\n        (`https://image.tmdb.org/t/p/w500` + actor.profile_path) : ('https://png.pngitem.com/pimgs/s/49-498069_talk-about-random-wiki-shy-guy-mario-hd.png'))\n    return response.data.cast;\n}\n\n// get reviews\nexport const getReviews = async (id) => {\n    const response = await apiRequest(`movie/${id}/reviews`);\n    return response.data.results;\n}","import { ListOfMovies, MovieItem, Poster, Title, H1 } from './Home.styled'\nimport { getMoviesList } from 'api/getMoviesList';\nimport { useState, useEffect } from 'react';\nimport { useLocation } from \"react-router-dom\";\n\nconst Home = () => {\n\n    const [trendingList, setTrendingList] = useState([]);       // API trending list\n    const location = useLocation();\n\n    useEffect(() => {\n        getMoviesList().then(setTrendingList).catch('error')\n    }, []);\n\n    return (\n        <main>\n            <H1>Trending today</H1>\n            <ListOfMovies as='div'>\n                {trendingList.map(({ id, title, poster_path }) => (\n                    <MovieItem to={`movies/${id}`} key={id} state={{ from: location }}>\n                        <Poster src={poster_path} alt='movie poster' />\n                        <Title>{title}</Title>\n                    </MovieItem>))}\n            </ListOfMovies>\n        </main>\n    )\n}  \n\nexport default Home;","import styled from \"styled-components\";\nimport { NavLink } from 'react-router-dom';\nimport { Box } from 'utils/Box';\n\nexport const ListOfMovies = styled(Box)`\n    display: flex;\n    flex-wrap: wrap;\n    margin-top: 50px;\n    width: 90%;\n    margin-left: auto;\n    margin-right: auto;\n    gap: 10px;\n`\nexport const MovieItem = styled(NavLink)`\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    width: calc((100% - 100px)/5);\n    background: none;\n    color: black;\n    text-align: center;\n    border-radius: 3px;\n    box-shadow: inset 0 0 0 1px #00a2d3, 0 0 0 2px rgba(0, 0, 0, 0.16);\n\n    :hover {\n        box-shadow: inset 0 0 0 1px #00a2d3, 0 0 0 3px rgba(0, 0, 0, 0.4);\n        background: #f0f0f0;\n    }\n`\nexport const Poster = styled.img`\n    display: block;\n    width: 100%;\n`\nexport const Title = styled.p`\n    padding: 0 5px;\n    margin-block-end: 0;\n    margin-block-start: 0;\n`\nexport const H1 = styled.h1`\n    display: block;\n    margin-top: 80px;\n    text-align: center;\n`\n","import styled from 'styled-components';\nimport {\n    color,\n    space,\n    layout,\n    flexbox,\n    background,\n    border,\n    shadow\n} from 'styled-system';\n\nexport const Box = styled('div')(\n    color,\n    space,\n    layout,\n    flexbox,\n    background,\n    border,\n    shadow\n)"],"names":["API_KEY","API_URL","apiRequest","path","parameter","params","Object","assign","api_key","response","axios","error","console","log","getMoviesList","data","results","map","movie","poster_path","getMoviesSearch","query","total_results","getMovieInfo","id","getCast","cast","actor","profile_path","getReviews","useState","trendingList","setTrendingList","location","useLocation","useEffect","then","catch","H1","as","title","to","state","from","src","alt","ListOfMovies","styled","Box","MovieItem","NavLink","Poster","Title","color","space","layout","flexbox","background","border","shadow"],"sourceRoot":""}