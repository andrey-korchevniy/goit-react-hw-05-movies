{"version":3,"file":"static/js/963.2a9b6f97.chunk.js","mappings":"4TAEMA,EAAU,mCACVC,EAAU,gCAEHC,EAAa,SAACC,GAA0B,IAApBC,EAAmB,uDAAP,GACnCC,EAASC,OAAOC,OAAO,CAAEC,QAASR,GAAWI,GACnD,IACI,IAAMK,EAAWC,IAAAA,IAAUT,EAAUE,EAAM,CAACE,OAAAA,IAC5C,OAAOI,EACT,MAAOE,GACLC,QAAQC,IAAIF,KCVdG,EAAW,8CACXC,EAAU,mCAGFC,EAAa,mCAAG,oGACHd,EAAW,uBADR,cACpBO,EADoB,QAEjBQ,KAAKC,QAAQC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,YAAoC,OAAtBD,EAAMC,YACxDN,EAAUK,EAAMC,YAAeP,KAHV,kBAInBL,EAASQ,KAAKC,SAJK,2CAAH,qDAQdI,EAAe,mCAAG,WAAOC,GAAP,0EACb,KAAVA,EADuB,0CAGIrB,EAAW,eAAgB,CAAEqB,MAAOA,IAHxC,cAGbd,EAHa,QAIVQ,KAAKC,QAAQC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,YAAoC,OAAtBD,EAAMC,YACxDN,EAAUK,EAAMC,YAAeP,KALjB,kBAMZL,EAASQ,MANG,yFAUhB,CAACC,QAAS,GAAIM,eAAgB,IAVd,yDAAH,sDAefC,EAAY,mCAAG,WAAOC,GAAP,uFAEDxB,EAAW,SAAD,OAAUwB,IAFnB,cAElBjB,EAFkB,QAGfQ,KAAKI,YAA4C,OAA9BZ,EAASQ,KAAKI,YACrCN,EAAUN,EAASQ,KAAKI,YAAeP,EAJpB,kBAKjBL,EAASQ,MALQ,2CAAH,sDASZU,EAAO,mCAAG,WAAOD,GAAP,uFAEIxB,EAAW,SAAD,OAAUwB,EAAV,aAFd,cAEbjB,EAFa,QAGVQ,KAAKW,KAAKT,KAAI,SAAAU,GAAK,OAAIA,EAAMC,aAAsC,OAAvBD,EAAMC,aACtDf,EAAUc,EAAMC,aAChB,2FALc,kBAMZrB,EAASQ,KAAKW,MANF,2CAAH,sDAUPG,EAAU,mCAAG,WAAOL,GAAP,uFACCxB,EAAW,SAAD,OAAUwB,EAAV,aADX,cAChBjB,EADgB,yBAEfA,EAASQ,KAAKC,SAFC,2CAAH,uD,sGCpCVc,GAAMC,EAAAA,EAAAA,IAAO,MAAPA,CACfC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,ICdSC,GAAeR,EAAAA,EAAAA,IAAOD,EAAPC,CAAH,2KASZS,GAAYT,EAAAA,EAAAA,IAAOU,EAAAA,GAAPV,CAAH,obAgBTW,EAASX,EAAAA,GAAAA,IAAH,+DAINY,EAAQZ,EAAAA,GAAAA,EAAH,mG,SC9BLa,EAAY,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SACxC,OACI,SAACR,EAAD,CAAcS,GAAG,MAAjB,SACKH,EAAK5B,KAAI,gBAAGO,EAAH,EAAGA,GAAIyB,EAAP,EAAOA,MAAO9B,EAAd,EAAcA,YAAd,OACN,UAACqB,EAAD,CAAWU,GAAE,UAAKH,GAAL,OAAgBvB,GAAe2B,MAAO,CAAEC,KAAMN,GAA3D,WACI,SAACJ,EAAD,CAAQW,IAAKlC,EAAamC,IAAI,kBAC9B,SAACX,EAAD,UAAQM,MAF4BzB,U,sLCF3C+B,EAASxB,EAAAA,GAAAA,OAAH,+xDAgDOyB,GAMbC,EAAgB1B,EAAAA,GAAAA,EAAH,sVAab2B,GAAQ3B,EAAAA,EAAAA,IAAO4B,EAAAA,GAAP5B,CAAH,kiBAwBL6B,GAAa7B,EAAAA,EAAAA,IAAO8B,EAAAA,GAAP9B,CAAH,iDAGV+B,EAAgB/B,EAAAA,GAAAA,IAAH,oOAOIgC,GAIjBC,GAAQjC,EAAAA,EAAAA,IAAOkC,EAAAA,GAAPlC,CAAH,mK,SC1GLmC,EAAY,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,UAClC,OACI,SAAC,KAAD,CACIC,cAAe,CAAEhD,MAAO+C,GACxBE,SAAUH,EAFd,UAGI,SAACL,EAAD,WACI,UAACF,EAAD,YACI,SAACF,EAAD,CAAOa,KAAK,QAAQC,KAAK,OAAOC,aAAa,MAAMC,WAAS,EAACC,YAAY,mBACzE,SAACX,EAAD,CAAOO,KAAK,QAAQK,UAAU,SAC9B,SAACnB,EAAD,WACI,SAACF,EAAD,CAAQiB,KAAK,SAAb,8B,oBCZXK,EAAW9C,EAAAA,GAAAA,EAAH,yEAIR+C,EAAY/C,EAAAA,GAAAA,IAAH,yECFTgD,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC1B,OACI,UAACF,EAAD,CAAW9B,GAAG,MAAd,WACI,SAAC6B,EAAD,UAAWG,KACX,gBAAK3B,IAAK4B,EAAS3B,IAAI,yBCuCnC,EAxCe,WACX,OAA0B4B,EAAAA,EAAAA,UAAS,IAAnC,eAAO7D,EAAP,KAAc8D,EAAd,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOE,EAAP,KAAeC,EAAf,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KACMzC,GAAW0C,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMpB,EAAOmB,EAAaE,IAAI,SAGjB,OAATrB,EAAgBA,IAASlD,GACzB8D,EAASZ,GAmBb,OATAsB,EAAAA,EAAAA,YAAU,YACNzE,EAAAA,EAAAA,IAAgBC,GACXyE,MAAK,SAAA/E,GACFsE,EAAUtE,EAAKC,SACfuE,EAASxE,EAAKO,kBACfyE,MAAM,WACd,CAAC1E,KAIA,4BACI,SAAC6C,EAAD,CAAWC,SAlBF,SAACpD,GACVA,EAAKM,QAAUA,IACf8D,GAAS,kBAAMpE,EAAKM,SACpBsE,EAAgB,CAAEtE,MAAON,EAAKM,UAeC+C,UAAW/C,IACzCiE,EAAQ,GACL,SAAC1C,EAAA,EAAD,CAAWC,KAAMuC,EAAQtC,SAAUA,EAAUC,SAAS,MACtD,SAACgC,EAAD,CAAaC,QAAmB,IAAVM,EAAc,wBAA0B,iC","sources":["api/api.js","api/getMoviesList.js","utils/Box.jsx","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","components/SearchBar/SearchBar.styled.js","components/SearchBar/SearchBar.jsx","components/SearchBlock/SearchBlock.styled.js","components/SearchBlock/SearchBlock.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst API_KEY = '686ce405e78c10a98219cd1fc59d1c0f';\nconst API_URL = 'https://api.themoviedb.org/3/';\n\nexport const apiRequest = (path, parameter = {}) => {\n    const params = Object.assign({ api_key: API_KEY }, parameter);\n    try {\n        const response = axios.get(API_URL + path, {params})\n        return response;\n    } catch (error) {\n        console.log(error);\n    }\n}","import { apiRequest } from \"./api\";\nconst noPoster = 'https://filmesiseriale.net/img/noposter.jpg';\nconst URL_API = 'https://image.tmdb.org/t/p/w500/';\n\n// getting list of trending\nexport const  getMoviesList = async () => {\n    const response = await apiRequest('trending/movie/week');\n    response.data.results.map(movie => movie.poster_path = movie.poster_path !== null ?\n        (URL_API + movie.poster_path) : noPoster)\n    return response.data.results;\n}\n\n// getting list of movies by search\nexport const getMoviesSearch = async (query) => {\n    if (query !== '') {\n        try {\n            const response = await apiRequest('search/movie', { query: query });\n            response.data.results.map(movie => movie.poster_path = movie.poster_path !== null ?\n                (URL_API + movie.poster_path) : noPoster)\n            return response.data;\n        } catch {\n        }\n    } else {\n        return {results: [], total_results: -1}\n    }\n}\n\n// get an info of one movie\nexport const getMovieInfo = async (id) => {\n    \n    const response = await apiRequest(`movie/${id}`);\n    response.data.poster_path = response.data.poster_path !== null ?\n        (URL_API + response.data.poster_path) : noPoster;\n    return response.data;\n}\n\n// get cast\nexport const getCast = async (id) => {\n\n    const response = await apiRequest(`movie/${id}/credits`);\n    response.data.cast.map(actor => actor.profile_path = actor.profile_path !== null ?\n        (URL_API + actor.profile_path) :\n        ('https://png.pngitem.com/pimgs/s/49-498069_talk-about-random-wiki-shy-guy-mario-hd.png'))\n    return response.data.cast;\n}\n\n// get reviews\nexport const getReviews = async (id) => {\n    const response = await apiRequest(`movie/${id}/reviews`);\n    return response.data.results;\n}","import styled from 'styled-components';\nimport {\n    color,\n    space,\n    layout,\n    flexbox,\n    background,\n    border,\n    shadow\n} from 'styled-system';\n\nexport const Box = styled('div')(\n    color,\n    space,\n    layout,\n    flexbox,\n    background,\n    border,\n    shadow\n)","import styled from \"styled-components\";\nimport { NavLink } from 'react-router-dom';\nimport { Box } from 'utils/Box';\n\nexport const ListOfMovies = styled(Box)`\n    display: flex;\n    flex-wrap: wrap;\n    margin-top: 80px;\n    width: 90%;\n    margin-left: auto;\n    margin-right: auto;\n    gap: 10px;\n`\nexport const MovieItem = styled(NavLink)`\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    width: calc((100% - 40px)/5);\n    background: none;\n    color: black;\n    text-align: center;\n    border-radius: 3px;\n    box-shadow: inset 0 0 0 1px #00a2d3, 0 0 0 2px rgba(0, 0, 0, 0.16);\n\n    :hover {\n        box-shadow: inset 0 0 0 1px #00a2d3, 0 0 0 3px rgba(0, 0, 0, 0.4);\n        background: #f0f0f0;\n    }\n`\nexport const Poster = styled.img`\n    display: block;\n    width: 100%;\n`\nexport const Title = styled.p`\n    padding: 0 5px;\n    margin-block-end: 0;\n    margin-block-start: 0;\n`","import { ListOfMovies, MovieItem, Poster, Title } from './MovieList.styled';\nimport PropTypes from 'prop-types';\n\nexport const MovieList = ({ list, location, pagePath }) => {\n    return (\n        <ListOfMovies as='div'>\n            {list.map(({ id, title, poster_path }) => (\n                <MovieItem to={`${pagePath}${id}`} key={id} state={{ from: location }}>\n                    <Poster src={poster_path} alt='movie poster' />\n                    <Title>{title}</Title>\n                </MovieItem>))}\n        </ListOfMovies>\n    )\n}\n\nMovieList.propTypes = {\n    list: PropTypes.array,\n    location: PropTypes.object,\n    pagePath: PropTypes.string\n}","import styled from 'styled-components';\nimport arrow from 'images/arrow.png';\nimport bg from 'images/bg.png';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const Button = styled.button`\n    position: absolute;\n    top: 50%;\n    left:0%;\n    transform: translateY(-50%);\n    width: 48px;\n    height: 48px;\n    text-indent: 120%;\n    overflow: hidden;\n    background: none;\n    border: 0;\n    border-radius: 24px;\n    cursor: pointer;\n    -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.2), 0 1px rgba(255, 255, 255, 0.1);\n    box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.2), 0 1px rgba(255, 255, 255, 0.1);\n\n    :before {\n        content: '';\n        position: absolute;\n        top: 5px;\n        bottom: 5px;\n        left: 5px;\n        right: 5px;\n        background: #00a2d3;\n        border-radius: 24px;\n        background-image: -webkit-linear-gradient(top, #00a2d3, #0d7796);\n        background-image: -moz-linear-gradient(top, #00a2d3, #0d7796);\n        background-image: -o-linear-gradient(top, #00a2d3, #0d7796);\n        background-image: linear-gradient(to bottom, #00a2d3, #0d7796);\n        -webkit-box-shadow: inset 0 0 0 1px #00a2d3, 0 0 0 5px rgba(0, 0, 0, 0.16);\n        box-shadow: inset 0 0 0 1px #00a2d3, 0 0 0 5px rgba(0, 0, 0, 0.16);\n        }\n\n    :active:before, :hover:before {\n        background: #0591ba;\n        background-image: -webkit-linear-gradient(top, #0591ba, #00a2d3);\n        background-image: -moz-linear-gradient(top, #0591ba, #00a2d3);\n        background-image: -o-linear-gradient(top, #0591ba, #00a2d3);\n        background-image: linear-gradient(to bottom, #0591ba, #00a2d3);\n        }\n\n    :after {\n        content: '';\n        position: absolute;\n        top: 15px;\n        left: 12px;\n        width: 25px;\n        height: 19px;\n        background: url(${arrow}) 0 0 no-repeat;\n        background-repeat: no-repeat;\n        background-size: contain;\n        background-position-x: 2px;\n        }\n`\nexport const ButtonWrapper = styled.p`\n    position: absolute;\n    top: 15%;\n    left: calc(50% + 120px);\n    width: 32px;\n    height: 32px;\n    padding: 8px;\n    border-radius: 32px;\n    -webkit-box-shadow: 0 0 4px rgba(0, 0, 0, 0.35);\n    box-shadow: 0 0 4px rgba(0, 0, 0, 0.35);\n    transform: translateY(-50%);\n    background-color: #504f4f;\n`\nexport const Input = styled(Field)`\n    height: 40px;\n    width: 300px;\n    padding: 0 10px;\n    outline: gray;\n    background: rgba(0, 0, 0, 0.20);\n\n    font-size: 20px;\n    color: #bbb;\n    text-shadow: 1px 1px 1px black;\n\n    border: 0;\n    border-radius: 5px;\n    -webkit-box-shadow: inset 0 1px 4px rgba(0, 0, 0, 0.3),\n    0 1px rgba(255, 255, 255, 0.06);\n    box-shadow: inset 0 1px 4px rgba(0, 0, 0, 0.3),\n    0 1px rgba(255, 255, 255, 0.06);\n\n  :focus {\n    color: white;\n    background: rgba(0, 0, 0, 0.1);\n    outline: 0;\n  }\n`\nexport const SearchForm = styled(Form)`\n    position: relative;\n`\nexport const FormikWrapper = styled.div`\n    position: fixed;\n    top: 50px;\n    left: 0;\n    width: 100%;\n    display: block;\n    height: 60px;\n    background: #878787 url(${bg}) 0 0 repeat;\n    text-align: center;\n    padding-top: 10px;\n`\nexport const Error = styled(ErrorMessage)`\n    position: absolute;\n    top: 45px;\n    left: 50%;\n    background: #ffffff;\n    transform: translateX(-50%);\n    padding: 0 10px;\n`","import { Formik } from 'formik';\nimport { Button, ButtonWrapper, Input, SearchForm, FormikWrapper, Error } from './SearchBar.styled';\nimport PropTypes from 'prop-types';\n\nexport const SearchBar = ({ onSearch, queryText }) => {\n    return (\n        <Formik\n            initialValues={{ query: queryText }}\n            onSubmit={onSearch}>\n            <FormikWrapper>\n                <SearchForm>\n                    <Input name='query' type=\"text\" autoComplete=\"off\" autoFocus placeholder=\"Search movies\" />\n                    <Error name='query' component='div' />\n                    <ButtonWrapper>\n                        <Button type=\"submit\">Search</Button>\n                    </ButtonWrapper>\n                </SearchForm>\n            </FormikWrapper>\n        </Formik>\n    )\n}\n\nSearchBar.propTypes = {\n    onSearch: PropTypes.func,\n}","import styled from 'styled-components';\n\nexport const FindText = styled.p`\n    font-size: large;\n    margin-bottom: 20px;\n`\nexport const FindBlock = styled.div`\n    text-align: center;\n    margin-top: 150px;\n`","import nothing from '../../images/nothing.png';\nimport { FindBlock, FindText } from './SearchBlock.styled';\nimport PropTypes from 'prop-types';\n                   \nexport const SearchBlock = ({ message }) => {\n    return (\n        <FindBlock as='div' >\n            <FindText>{message}</FindText>\n            <img src={nothing} alt='nothing is found'/>\n        </FindBlock>\n    )\n}\n\nSearchBlock.propTypes = {\n    message: PropTypes.string,\n}","import { useState, useEffect } from \"react\";\nimport { getMoviesSearch } from 'api/getMoviesList';\nimport { useLocation, useSearchParams } from \"react-router-dom\";\nimport { SearchBar } from \"components/SearchBar/SearchBar\";\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { SearchBlock } from \"components/SearchBlock/SearchBlock\";\n\nconst Movies = () => {\n    const [query, setQuery] = useState('');                 // a search word or frase\n    const [movies, setMovies] = useState([]);               // API movie list by search frase\n    const [total, setTotal] = useState(null);               // marker\n    const location = useLocation();\n    const [searchParams, setSearchParams] = useSearchParams();\n    const name = searchParams.get(\"query\");\n\n    // render a page after return from MovieDetails\n    if (name !== null & name !== query) {\n        setQuery(name)\n    }\n    // processing search-btn click\n    const onSearch = (data) => {\n        if (data.query !== query) {\n            setQuery(() => data.query);\n            setSearchParams({ query: data.query })\n        }\n    }\n\n    useEffect(() => {\n        getMoviesSearch(query)\n            .then(data => {\n                setMovies(data.results);\n                setTotal(data.total_results);\n            }).catch('error')\n    }, [query]);\n\n    // render 1 of 3 options by total-value: = null - only searchbar;  > 0 - list of movies; = 0 - nothing has been found\n    return (\n        <div>\n            <SearchBar onSearch={onSearch} queryText={query} />\n            {total > 0 ?\n                <MovieList list={movies} location={location} pagePath='' /> :\n                <SearchBlock message={total === 0 ? 'Nothing was finded :(' : 'Type any title of movie'} />\n            }\n        </div>\n    )\n}\n\nexport default Movies;\n\n"],"names":["API_KEY","API_URL","apiRequest","path","parameter","params","Object","assign","api_key","response","axios","error","console","log","noPoster","URL_API","getMoviesList","data","results","map","movie","poster_path","getMoviesSearch","query","total_results","getMovieInfo","id","getCast","cast","actor","profile_path","getReviews","Box","styled","color","space","layout","flexbox","background","border","shadow","ListOfMovies","MovieItem","NavLink","Poster","Title","MovieList","list","location","pagePath","as","title","to","state","from","src","alt","Button","arrow","ButtonWrapper","Input","Field","SearchForm","Form","FormikWrapper","bg","Error","ErrorMessage","SearchBar","onSearch","queryText","initialValues","onSubmit","name","type","autoComplete","autoFocus","placeholder","component","FindText","FindBlock","SearchBlock","message","nothing","useState","setQuery","movies","setMovies","total","setTotal","useLocation","useSearchParams","searchParams","setSearchParams","get","useEffect","then","catch"],"sourceRoot":""}